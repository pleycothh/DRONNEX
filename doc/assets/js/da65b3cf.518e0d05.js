"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[2771],{1160:e=>{e.exports=JSON.parse('{"permalink":"/doc/blog/wlbp","editUrl":"https://github.com/pleycothh/DRONNEX/tree/main/docs-site/blog/2025-06-30-work-log.md","source":"@site/blog/2025-06-30-work-log.md","title":"Work Log (Week 1)","description":"Current Progress","date":"2025-06-30T00:00:00.000Z","tags":[{"inline":true,"label":"simpleFOC","permalink":"/doc/blog/tags/simple-foc"}],"readingTime":2.49,"hasTruncateMarker":false,"authors":[{"name":"Ben Li","title":"Software engineer","url":"https://github.com/pleycothh","page":{"permalink":"/doc/blog/authors/ben"},"socials":{"x":"https://x.com/dronnex","github":"https://github.com/pleycothh"},"imageURL":"https://github.com/pleycothh.png","key":"ben"}],"frontMatter":{"slug":"wlbp","title":"Work Log (Week 1)","authors":["ben"],"tags":["simpleFOC"]},"unlisted":false,"nextItem":{"title":"Human Body vs. Humanoid Robot Design","permalink":"/doc/blog/hbhrd"}}')},6769:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var l=i(1160),r=i(4848),o=i(8453);const t={slug:"wlbp",title:"Work Log (Week 1)",authors:["ben"],tags:["simpleFOC"]},s=void 0,c={authorsImageUrls:[void 0]},d=[{value:"Current Progress",id:"current-progress",level:2},{value:"Final Objective",id:"final-objective",level:2},{value:"Future Planning",id:"future-planning",level:2}];function a(e){const n={h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"current-progress",children:"Current Progress"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Deng FOC V4 board, can rule two motor with Deng FOC V4 library only, limitated to i2c. ( PID adjust required)"}),"\n",(0,r.jsx)(n.li,{children:"Simple FOC library works in one MOTOR with esp32 only with 2.2.1 library + 2.0.17 ESP32 library. ( some known issue with dual motor, will fix in 2.3.5)"}),"\n",(0,r.jsx)(n.li,{children:"Simple FOC with STM32-F103 works with encoder only, due to time group issue, i2c will not work simply."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Failed test:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple FOC with F411 black pill board: Issue time group"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Issue Found:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple FOC will pull up (HIGH) PIN13, 14 by default, witch will make STlink fail."}),"\n",(0,r.jsx)(n.li,{children:"ESP32 can not work with dual motor on Simple FOC library, known issue, will fix in 2.3.5."}),"\n",(0,r.jsx)(n.li,{children:"STM32 other than F103 and G431 not worked yet, need more analysis."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"final-objective",children:"Final Objective"}),"\n",(0,r.jsx)(n.p,{children:"To be able to have 12 DOF robot with BLDC control, I need cheap, reliaable BLDC FOC module that canble replciate. WIFI on esp32 is not required, also size is too big and no can, leave me STM32 as best option."}),"\n",(0,r.jsx)(n.p,{children:"I need to test mroe STM32 option, to find best MCU + Encoder + driver conbonation to be reliable and eazy to build also cheap."}),"\n",(0,r.jsx)(n.p,{children:"I want to fix the module selection, this case code and pid can be replciate easly."}),"\n",(0,r.jsx)(n.p,{children:"Motor I will decide between 5010 260kv and 5056 140kv, board I will decide between 3 options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"odrive v3.6 50$ for 2 motors (50A) - Support Odrive, SImpleFOC"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"STM32G431-ESC-1"})," 30$ for 1 motors (30A) - support SimpleFOC and STM Motor SDK"]}),"\n",(0,r.jsx)(n.li,{children:"Drive Shiled + STM32 G431 15$ for 1 motor (20A) - support SimpleFOC"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Build simple project like balance bot or Desk Arm is good for intergrating test with above set up."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Balance bot (FOC control for 2 motor, PID control)"}),"\n",(0,r.jsx)(n.li,{children:"2 leg balance bot  (FOC control for 2 motor, PID control, RC controll, )"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"future-planning",children:"Future Planning"}),"\n",(0,r.jsx)(n.p,{children:"Because currently I stuck on running simple FOC code with ESP32, I need to do more testing, with more valid working case, I can make final decision related to STM32 G4 serial."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"I need stop work on esp32 two motor project untill ( Simple FOC 2.3.5)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"I can start pick up 2 leg bot while wating G4 chip."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"3 5010 motor arm, greate for 1 leg project."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"G474 + 3 driver + 3 5010"}),"\n",(0,r.jsx)(n.li,{children:"(F103 + driver + 5010) * 3"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"need to make decision, is odrive needed?"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Or G431-esc with power shiled, 30A is enough? Need to torque test."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Decision:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"5010 260kv motor with 10:1 gear: torque output per Amps."}),"\n",(0,r.jsx)(n.li,{children:"5056 140KV motor with 10:1 gear: torque output per Amps."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"if 5010 is enought, 30A drive is enought."}),"\n",(0,r.jsx)(n.p,{children:"if 5056 50A required, odrive is must have."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"FOC TEST List:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["STM32G431-ESC","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple FOC"}),"\n",(0,r.jsx)(n.li,{children:"STM Motor SDK (SK)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["STM32G474 ( able to control 3 driver)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple FOC"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["STM32F407","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple FOC"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"ESP32 ( Okay for hobby and POC, not sutable for dog.)"}),"\n",(0,r.jsx)(n.li,{children:"STM32 F103 ( back up for G431) ( only working version)"}),"\n",(0,r.jsx)(n.li,{children:"STM32 F411 ( no working)"}),"\n",(0,r.jsx)(n.li,{children:"STM32 H750 ( optional test)"}),"\n",(0,r.jsx)(n.li,{children:"STM32 H753 ( over kill for FOC only)"}),"\n",(0,r.jsx)(n.li,{children:"STM32 F405 ( 2 driver )"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>s});var l=i(6540);const r={},o=l.createContext(r);function t(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);