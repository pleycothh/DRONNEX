"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[6302],{7075:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"project/ai-foc-balance-bot","title":"AI FOC balance bot","description":"Introduction","source":"@site/docs/project/ai-foc-balance-bot.md","sourceDirName":"project","slug":"/project/ai-foc-balance-bot","permalink":"/doc/docs/project/ai-foc-balance-bot","draft":false,"unlisted":false,"editUrl":"https://github.com/pleycothh/DRONNEX/tree/main/docs-site/docs/project/ai-foc-balance-bot.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"AI Drone","permalink":"/doc/docs/project/ai-drone-en"},"next":{"title":"First Person View (FPV)","permalink":"/doc/docs/category/first-person-view-fpv"}}');var t=r(4848),o=r(8453);const l={sidebar_position:3},s="AI FOC balance bot",a={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequirement",id:"prerequirement",level:2},{value:"Wire Guid",id:"wire-guid",level:2},{value:"Coding",id:"coding",level:2},{value:"First Step: Uart Set Up",id:"first-step-uart-set-up",level:3},{value:"Second Step: IMU Set Up",id:"second-step-imu-set-up",level:3},{value:"Optional Setp: FOC control from PI Zero",id:"optional-setp-foc-control-from-pi-zero",level:3},{value:"Final Setp: PID Control",id:"final-setp-pid-control",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ai-foc-balance-bot",children:"AI FOC balance bot"})}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"STM32 F411 balance bot based on Rasbarry Pi with Ros2 and AI powered."}),"\n",(0,t.jsx)(n.p,{children:"This document will focuse on Pi side, for detailed F411 set up, check another document above list."}),"\n",(0,t.jsx)(n.h2,{id:"prerequirement",children:"Prerequirement"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pi Zero 2W"}),"\n",(0,t.jsx)(n.li,{children:"3A 5V BEC ( power pi zero)"}),"\n",(0,t.jsx)(n.li,{children:"Pi Camera (optional)"}),"\n",(0,t.jsx)(n.li,{children:"FOC balance bot"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"wire-guid",children:"Wire Guid"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IMU:"})," I2C connect to rasbarry pi"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MCU:"})," Serial1 connect to Pi 2W"]}),"\n",(0,t.jsx)(n.h2,{id:"coding",children:"Coding"}),"\n",(0,t.jsx)(n.h3,{id:"first-step-uart-set-up",children:"First Step: Uart Set Up"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequired:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Go to: Interface Options \u2192 Serial","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Disable login shell over serial"}),"\n",(0,t.jsx)(n.li,{children:"Enable hardware serial port"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Install pyserial:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install pyserial\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Python Script (Pi2W side):","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="python"',children:'import serial\r\nimport time\r\n\r\nser = serial.Serial(\'/dev/serial0\', 115200, timeout=1)\r\n\r\nwhile True:\r\n    line = ser.readline().decode(\'utf-8\').strip()\r\n    if line:\r\n        print(f"STM32 says: {line}")\r\n        if "PING" in line:\r\n            ser.write(b"PONG\\n")\r\n    time.sleep(0.1)\r\n\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["STM32F411CE (Arduino Framework)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make sure you use Serial1 (hardware UART):"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="cpp"',children:'void setup() {\r\n    Serial.begin(115200);      // USB Serial for debugging\r\n    Serial1.begin(115200);     // UART on PA2 (TX), PA3 (RX)\r\n\r\n    delay(500);\r\n    Serial.println("STM32 booted. Starting communication...");\r\n}\r\n\r\nvoid loop() {\r\n    static unsigned long lastSend = 0;\r\n\r\n    // Send message every 2 seconds\r\n    if (millis() - lastSend > 2000) {\r\n        Serial1.println("PING from STM32");\r\n        lastSend = millis();\r\n    }\r\n\r\n    // Read incoming from Pi\r\n    while (Serial1.available()) {\r\n        String incoming = Serial1.readStringUntil(\'\\n\');\r\n        Serial.print("From Pi: ");\r\n        Serial.println(incoming);\r\n    }\r\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Optional debug:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Confirm Uart connection on serial0:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls /dev/serial*\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Example command and output:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pi@raspberrypi:~ $ ls /dev/serial*\r\n/dev/serial0  /dev/serial1\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"second-step-imu-set-up",children:"Second Step: IMU Set Up"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"1. Ensure I2C is enabled:"}),"\r\nRun:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo raspi-config\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go to Interface Options \u2192 I2C \u2192 Enable"}),"\n",(0,t.jsx)(n.li,{children:"Reboot after enabling"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"2. Check if IMU is detected:"}),"\r\nRun:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"i2cdetect -y 1\n"})}),"\n",(0,t.jsx)(n.p,{children:"You should see something like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="lua"',children:"     0 1 2 3 4 5 6 7 8 9 a b c d e f\r\n00:          -- -- -- -- -- -- -- --\r\n10: -- -- -- -- -- -- -- -- -- -- -- --\r\n20: -- -- -- -- -- -- -- -- -- -- -- --\r\n30: -- -- -- -- -- -- -- -- 68 -- -- --\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you see 68, MPU6050 is detected."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. Install dependencies:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt update\r\nsudo apt install python3-smbus i2c-tools\r\npip install mpu6050-raspberrypi\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"4. Example Python code to read MPU6050:"})}),"\n",(0,t.jsxs)(n.p,{children:["Create and Run ",(0,t.jsx)(n.code,{children:"read_mpu.py"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="python"',children:'from mpu6050 import mpu6050\r\nimport time\r\n\r\nsensor = mpu6050(0x68)\r\n\r\nwhile True:\r\n    accel = sensor.get_accel_data()\r\n    gyro = sensor.get_gyro_data()\r\n    temp = sensor.get_temp()\r\n\r\n    print("------")\r\n    print("Accel:", accel)\r\n    print("Gyro:", gyro)\r\n    print("Temperature:", temp)\r\n    \r\n    time.sleep(0.5)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"optional-setp-foc-control-from-pi-zero",children:"Optional Setp: FOC control from PI Zero"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Update close loop FOC code:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="cpp" ',children:"    // 0. Add two motor target for control\r\n    float target_voltage0 = 0;\r\n    float target_voltage1 = 0;\r\n    \r\n    // 1.  Add this for Pi communication\r\n    Serial1.begin(115200); \r\n    while (!Serial1);\r\n\r\n    // 2. update command serial:\r\n    Commander command = Commander(Serial1);\r\n    void doMotor0(char* cmd) { command.scalar(&target_voltage0, cmd); }\r\n    void doMotor1(char* cmd) { command.scalar(&target_voltage1, cmd); }\r\n\r\n    // 3. (optional) motor monitering :\r\n    motor0.useMonitoring(Serial1);\r\n    motor1.useMonitoring(Serial1);\r\n\r\n    // 4. Add both command:\r\n    command.add('0', doMotor0, \"Motor0 voltage\");\r\n    command.add('1', doMotor1, \"Motor1 voltage\");\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. To test from Pi:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="SingleMotor.py"',children:'import serial\r\n\r\nser = serial.Serial("/dev/serial0", 115200)\r\n\r\nwhile True:\r\n    cmd = input("Enter voltage (0-12): ")\r\n    ser.write(f\'T{cmd}\\n\'.encode())  # send motor command\r\n    print("Waiting for feedback...")\r\n    print(ser.readline().decode(errors=\'ignore\').strip())\r\n\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="Two-motor-controll.py"',children:'    import serial\r\n\r\n    ser = serial.Serial("/dev/serial0", 115200)\r\n\r\n    while True:\r\n        motor = input("Motor index (0 or 1): ")\r\n        voltage = input("Enter voltage (e.g. 2.5 or -1.0): ")\r\n        cmd = f"T{motor} {voltage}\\n"\r\n        ser.write(cmd.encode())\r\n        print(f"Sent: {cmd.strip()}")\r\n        print("Waiting for feedback...")\r\n        while ser.in_waiting:\r\n            print(ser.readline().decode(errors=\'ignore\').strip())\n'})}),"\n",(0,t.jsx)(n.h3,{id:"final-setp-pid-control",children:"Final Setp: PID Control"})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>s});var i=r(6540);const t={},o=i.createContext(t);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);